diff -ur tf-50b8/src/globals.h tf-50b7-log-timestamp+ansi/src/globals.h
--- tf-50b8/src/globals.h	2005-04-18 05:15:35.000000000 +0200
+++ tf-50b7-log-timestamp+ansi/src/globals.h	2005-09-28 18:03:58.000000000 +0200
@@ -158,6 +158,7 @@
 #define TFMAILPATH	getstdvar(VAR_TFMAILPATH)
 #define alert_attr	getattrvar(VAR_alert_attr)
 #define alert_time	gettimevar(VAR_alert_time)
+#define	ansi_log	getintvar(VAR_ansi_log)
 #define auto_fg		getintvar(VAR_auto_fg)
 #define background	getintvar(VAR_background)
 #define backslash	getintvar(VAR_backslash)
@@ -196,6 +196,8 @@
 #define keypad		getintvar(VAR_keypad)
 #define kprefix		getstrvar(VAR_kprefix)
 #define login		getintvar(VAR_login)
+#define log_prefix	getstrvar(VAR_log_prefix)
+#define log_time_format	getstrvar(VAR_log_time_format)
 #define lpflag		getintvar(VAR_lp)
 #define lpquote		getintvar(VAR_lpquote)
 #define maildelay	gettimevar(VAR_maildelay)
diff -ur tf-50b8/src/history.c tf-50b7-log-timestamp+ansi/src/history.c
--- tf-50b8/src/history.c	2005-04-18 05:15:35.000000000 +0200
+++ tf-50b7-log-timestamp+ansi/src/history.c	2005-09-28 18:28:15.000000000 +0200
@@ -127,10 +127,35 @@
 
 static void save_to_log(History *hist, const conString *str)
 {
+     int i_s = 0;
+     STATIC_BUFFER(log_buffer);
+
+     //set time to string
+     Stringtrunc(log_buffer, 0);
+
+     //create prefix
+     for (i_s = 0; i_s < log_prefix->len; i_s++)
+     {
+       if (log_prefix->data[i_s] != '%') {
+         SStringoncat(log_buffer, log_prefix, i_s, 1);
+       } else {
+         ++i_s;
+         if (log_prefix->data[i_s] == 't')
+           tftime(log_buffer, log_time_format, &str->time);
+         else
+           SStringoncat(log_buffer, log_prefix, i_s-1, 2);
+       }
+     }
+
+    if (ansi_log)
+        SStringcat(log_buffer, encode_ansi(str, 0));
+    else
+        SStringcat(log_buffer, str);
+        
     if (wraplog) {
         /* ugly, but some people want it */
-	const char *p = str->data;
-        int i = 0, first = TRUE, len, remaining = str->len;
+        const char *p = log_buffer->data;
+        int i = 0, first = TRUE, len, remaining = log_buffer->len;
         do { /* must loop at least once, to handle empty string case */
             if (!first && wrapflag)
                 for (i = wrapspace; i; i--) tfputc(' ', hist->logfile);
@@ -141,7 +166,7 @@
 	    remaining -= len;
         } while (remaining);
     } else {
-        tfputs(str->data, hist->logfile);
+        tfputs(log_buffer->data, hist->logfile);
     }
     tfflush(hist->logfile);
 }
diff -ur tf-50b8/src/varlist.h tf-50b7-log-timestamp+ansi/src/varlist.h
--- tf-50b8/src/varlist.h	2005-04-18 05:15:36.000000000 +0200
+++ tf-50b7-log-timestamp+ansi/src/varlist.h	2005-09-28 18:03:58.000000000 +0200
@@ -46,6 +46,7 @@
 #if 0
 varflag(VAR_auto_fg,	"auto_fg",	FALSE,		NULL)
 #endif
+varflag(VAR_ansi_log,	"ansi_log",	FALSE,		NULL)
 varflag(VAR_background,	"background",	TRUE,		tog_bg)
 varflag(VAR_backslash,	"backslash",	TRUE,		NULL)
 varenum(VAR_bamf,	"bamf",		FALSE,		NULL,	enum_bamf)
@@ -85,6 +86,8 @@
 varflag(VAR_keypad,	"keypad",	FALSE,		tog_keypad)
 varstr (VAR_kprefix,	"kprefix",	NULL,		NULL)
 varflag(VAR_login,	"login",	TRUE,		NULL)
+varstr (VAR_log_prefix,"log_prefix",	"%t # ",	NULL)
+varstr (VAR_log_time_format,"log_time_format",	"%H:%M:%S",	NULL)
 varflag(VAR_lp,		"lp",		FALSE,		tog_lp)
 varflag(VAR_lpquote,	"lpquote",	FALSE,		ch_lpquote)
 vartime(VAR_maildelay,	"maildelay",	60,0,		ch_maildelay)
diff -ur tf-50b8/tf-lib/tf-help tf-50b7-log-timestamp+ansi/tf-lib/tf-help
--- tf-50b8/tf-lib/tf-help	2005-04-18 05:19:40.000000000 +0200
+++ tf-50b7-log-timestamp+ansi/tf-lib/tf-help	2005-09-28 18:03:58.000000000 +0200
@@ -2327,13 +2327,16 @@
   Wrapping will be done in the log file only if the [1m%{wraplog}[22;0m [1mvariable[22;0m is 
   "on".  
 
+  ANSI sequences will be recorded in the log file only if the [1m%{ansi_log}[22;0m [1mvariable[22;0m
+  is "on".
+
   Logging is disabled by default.  The default value of [1m${LOGFILE}[22;0m is 
   "tiny.log".  
 
   Note: the natural logarithm function was renamed from log() to ln() in 
   version 5.0, to avoid confusion with /log.  
 
-  See: [1m%wraplog[22;0m, [1mhistory[22;0m, [1mnlog()[22;0m [1mfwrite()[22;0m 
+  See: [1m%ansi_log[22;0m, [1m%wraplog[22;0m, [1mhistory[22;0m, [1mnlog()[22;0m [1mfwrite()[22;0m 
 
 &/logme
 
@@ -8933,6 +8935,12 @@
           (dtime) The number of seconds that [1malert[22;0m text is displayed on the 
           [1mstatus line[22;0m.  See [1mtfio[22;0m.  
 
+#ansi_log
+#%ansi_log
+  [1mansi_log[22m=off 
+          (flag) Enable ANSI sequences in log files.  See also: [1m/log[22;0m.  
+
+
 #background
 #%background
   [1mbackground[22m=on 
