Perl module packaging
=====================

'new.pl' is a perl script which generates omnios-build scripts for the perl
module specified on command line as well as all its dependencies from CPAN. It
requires MetaCPAN::Client to run and has multiple caveats; see the comment at
the top of the file for details. As well as creating build scripts, new.pl will
output one possible build order for the scripts it created.

Package name and path conventions
=================================

cpan-inc.sh specifies the details, but modules should go to
/opt/niksula/perl5/lib/vendor_perl/$PERL_VERSION (eg. 5.20.1). Module packages
should not install files under site_perl and especially not in core directories
(eg. /opt/niksula/perl5/lib/$PERL_VERSION). PREFIX is /opt/niksula/perl5.

Perl module packages will be named 'niksula/perl/$FOO' where $FOO is the name
of the CPAN distribution (eg. Mail-SpamAssassin). They will have dependencies
of both type require and type incorporate on the minor version of perl used to
build (eg. if using 5.20.1, module packages will incorporate and require
niksula/runtime/perl@5.20). This is because according to the INSTALL file
shipped with perl, newer perl subversions (eg. 5.20.2) will look in the module
paths of previous subversions and should be binary compatible.

Modifying build scripts
=======================

It's of course possible (and perhaps sometimes necessary, eg. to install
programs to user PATH, which is avoided by default) to modify the build scripts
generated by new.pl, but care should be taken because subsequent runs of new.pl
will overwrite existing build.sh scripts. Careful use of git will help here.

Rebuilding packages
===================

After the initial build, it should be possible to rerun any build script as
long as the build dependencies are installed. Tools for generating just the
build dependency graph don't currently exist (unless buildctl can help here?),
so if a full rebuild from scratch is desired it's probably easiest to make
new.pl regenerate all build scripts (though this will overwrite any
modifications and will update all module versions to latest available ones).
